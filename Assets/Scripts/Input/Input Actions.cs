//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Scripts/Input/Input Actions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Input Actions"",
    ""maps"": [
        {
            ""name"": ""Game"",
            ""id"": ""65f49f7b-5bc5-442f-bd6c-e744e21cbc1f"",
            ""actions"": [
                {
                    ""name"": ""Movement Player 1"",
                    ""type"": ""Value"",
                    ""id"": ""d5cb45c5-99b6-4b78-9994-66617ef5c540"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Pick Left Hand Player 1"",
                    ""type"": ""Button"",
                    ""id"": ""39566998-5d70-45d2-b748-74883f552b96"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pick RightHand Player 1"",
                    ""type"": ""Button"",
                    ""id"": ""8a17628d-ea05-4c68-a7d3-eca70207e9a7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Movement Player 2"",
                    ""type"": ""Value"",
                    ""id"": ""ada8bf0f-cfba-49c8-9d36-d25e56ce2e00"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Pick Left Hand Player 2"",
                    ""type"": ""Button"",
                    ""id"": ""140fa2d4-24ba-4a19-aace-491d74b553b5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pick Right Hand Player 2"",
                    ""type"": ""Button"",
                    ""id"": ""c9334c28-7f62-42c1-bcf6-2e8ffc44737e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""ccaecea3-bdc2-4bf5-ac13-6753270c4992"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pick Left Hand Player 1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""248f13b0-1c3c-4aff-8d9c-5b560f48cc26"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pick RightHand Player 1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""19c6b2ef-15ba-45c8-8a10-2c6047c6bebe"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement Player 1"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""3b6cc029-a716-4535-9d02-d8dc524fa751"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement Player 1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""14c7972b-58c6-4e44-943a-f5932663024f"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement Player 1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""febe88df-18ad-4de6-9357-d2461b053bb3"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement Player 1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""5664553c-3300-45cd-989c-80de29109ed9"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement Player 1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""3ba6bf29-32e8-4f97-bad3-b640fcd2d830"",
                    ""path"": ""<Keyboard>/o"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pick Right Hand Player 2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""de596874-4a3d-49e2-a25f-3faea9336db2"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement Player 2"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""5a0d6e1e-3d28-4db5-8306-e195afdab56a"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement Player 2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""a6016a11-7370-4111-9b02-01c5888058da"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement Player 2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""eb1faf0f-24d8-47de-9b33-7340a4327e3c"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement Player 2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""2b0de3d2-8f05-4ab1-af4d-c1b2c0ad87ee"",
                    ""path"": ""<Keyboard>/l"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement Player 2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""ea28523c-f234-4e65-9dfc-34cdbdecfada"",
                    ""path"": ""<Keyboard>/u"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pick Left Hand Player 2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Game
        m_Game = asset.FindActionMap("Game", throwIfNotFound: true);
        m_Game_MovementPlayer1 = m_Game.FindAction("Movement Player 1", throwIfNotFound: true);
        m_Game_PickLeftHandPlayer1 = m_Game.FindAction("Pick Left Hand Player 1", throwIfNotFound: true);
        m_Game_PickRightHandPlayer1 = m_Game.FindAction("Pick RightHand Player 1", throwIfNotFound: true);
        m_Game_MovementPlayer2 = m_Game.FindAction("Movement Player 2", throwIfNotFound: true);
        m_Game_PickLeftHandPlayer2 = m_Game.FindAction("Pick Left Hand Player 2", throwIfNotFound: true);
        m_Game_PickRightHandPlayer2 = m_Game.FindAction("Pick Right Hand Player 2", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Game
    private readonly InputActionMap m_Game;
    private List<IGameActions> m_GameActionsCallbackInterfaces = new List<IGameActions>();
    private readonly InputAction m_Game_MovementPlayer1;
    private readonly InputAction m_Game_PickLeftHandPlayer1;
    private readonly InputAction m_Game_PickRightHandPlayer1;
    private readonly InputAction m_Game_MovementPlayer2;
    private readonly InputAction m_Game_PickLeftHandPlayer2;
    private readonly InputAction m_Game_PickRightHandPlayer2;
    public struct GameActions
    {
        private @InputActions m_Wrapper;
        public GameActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @MovementPlayer1 => m_Wrapper.m_Game_MovementPlayer1;
        public InputAction @PickLeftHandPlayer1 => m_Wrapper.m_Game_PickLeftHandPlayer1;
        public InputAction @PickRightHandPlayer1 => m_Wrapper.m_Game_PickRightHandPlayer1;
        public InputAction @MovementPlayer2 => m_Wrapper.m_Game_MovementPlayer2;
        public InputAction @PickLeftHandPlayer2 => m_Wrapper.m_Game_PickLeftHandPlayer2;
        public InputAction @PickRightHandPlayer2 => m_Wrapper.m_Game_PickRightHandPlayer2;
        public InputActionMap Get() { return m_Wrapper.m_Game; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameActions set) { return set.Get(); }
        public void AddCallbacks(IGameActions instance)
        {
            if (instance == null || m_Wrapper.m_GameActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GameActionsCallbackInterfaces.Add(instance);
            @MovementPlayer1.started += instance.OnMovementPlayer1;
            @MovementPlayer1.performed += instance.OnMovementPlayer1;
            @MovementPlayer1.canceled += instance.OnMovementPlayer1;
            @PickLeftHandPlayer1.started += instance.OnPickLeftHandPlayer1;
            @PickLeftHandPlayer1.performed += instance.OnPickLeftHandPlayer1;
            @PickLeftHandPlayer1.canceled += instance.OnPickLeftHandPlayer1;
            @PickRightHandPlayer1.started += instance.OnPickRightHandPlayer1;
            @PickRightHandPlayer1.performed += instance.OnPickRightHandPlayer1;
            @PickRightHandPlayer1.canceled += instance.OnPickRightHandPlayer1;
            @MovementPlayer2.started += instance.OnMovementPlayer2;
            @MovementPlayer2.performed += instance.OnMovementPlayer2;
            @MovementPlayer2.canceled += instance.OnMovementPlayer2;
            @PickLeftHandPlayer2.started += instance.OnPickLeftHandPlayer2;
            @PickLeftHandPlayer2.performed += instance.OnPickLeftHandPlayer2;
            @PickLeftHandPlayer2.canceled += instance.OnPickLeftHandPlayer2;
            @PickRightHandPlayer2.started += instance.OnPickRightHandPlayer2;
            @PickRightHandPlayer2.performed += instance.OnPickRightHandPlayer2;
            @PickRightHandPlayer2.canceled += instance.OnPickRightHandPlayer2;
        }

        private void UnregisterCallbacks(IGameActions instance)
        {
            @MovementPlayer1.started -= instance.OnMovementPlayer1;
            @MovementPlayer1.performed -= instance.OnMovementPlayer1;
            @MovementPlayer1.canceled -= instance.OnMovementPlayer1;
            @PickLeftHandPlayer1.started -= instance.OnPickLeftHandPlayer1;
            @PickLeftHandPlayer1.performed -= instance.OnPickLeftHandPlayer1;
            @PickLeftHandPlayer1.canceled -= instance.OnPickLeftHandPlayer1;
            @PickRightHandPlayer1.started -= instance.OnPickRightHandPlayer1;
            @PickRightHandPlayer1.performed -= instance.OnPickRightHandPlayer1;
            @PickRightHandPlayer1.canceled -= instance.OnPickRightHandPlayer1;
            @MovementPlayer2.started -= instance.OnMovementPlayer2;
            @MovementPlayer2.performed -= instance.OnMovementPlayer2;
            @MovementPlayer2.canceled -= instance.OnMovementPlayer2;
            @PickLeftHandPlayer2.started -= instance.OnPickLeftHandPlayer2;
            @PickLeftHandPlayer2.performed -= instance.OnPickLeftHandPlayer2;
            @PickLeftHandPlayer2.canceled -= instance.OnPickLeftHandPlayer2;
            @PickRightHandPlayer2.started -= instance.OnPickRightHandPlayer2;
            @PickRightHandPlayer2.performed -= instance.OnPickRightHandPlayer2;
            @PickRightHandPlayer2.canceled -= instance.OnPickRightHandPlayer2;
        }

        public void RemoveCallbacks(IGameActions instance)
        {
            if (m_Wrapper.m_GameActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGameActions instance)
        {
            foreach (var item in m_Wrapper.m_GameActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GameActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GameActions @Game => new GameActions(this);
    public interface IGameActions
    {
        void OnMovementPlayer1(InputAction.CallbackContext context);
        void OnPickLeftHandPlayer1(InputAction.CallbackContext context);
        void OnPickRightHandPlayer1(InputAction.CallbackContext context);
        void OnMovementPlayer2(InputAction.CallbackContext context);
        void OnPickLeftHandPlayer2(InputAction.CallbackContext context);
        void OnPickRightHandPlayer2(InputAction.CallbackContext context);
    }
}
